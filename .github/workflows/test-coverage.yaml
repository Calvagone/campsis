# on:
#   push:
#     branches:
#       - develop
#       - main
#   pull_request:
#     branches:
#       - main
# 
# name: test-coverage
# 
# jobs:
#   test-coverage:
#     runs-on: ubuntu-20.04
#     env:
#       GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
#     steps:
#       - uses: actions/checkout@v2
# 
#       - uses: r-lib/actions/setup-r@v1
# 
#       - uses: r-lib/actions/setup-pandoc@v1
# 
#       - name: Query dependencies
#         run: |
#           install.packages('remotes')
#           dep <- remotes::dev_package_deps(dependencies=TRUE)
#           dep <- dep[dep$package != "campsismod",]
#           saveRDS(dep, ".github/depends.Rds", version = 2)
#           writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
#         shell: Rscript {0}
# 
#       - name: Restore R package cache
#         uses: actions/cache@v2
#         with:
#           path: ${{ env.R_LIBS_USER }}
#           key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
#           restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-
# 
#       - name: Install system dependencies ubuntu
#         run: |
#           while read -r cmd
#           do
#             eval sudo $cmd
#           done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')
# 
#       - name: Install dependencies
#         run: |
#           install.packages("assertthat")
#           install.packages("dplyr")
#           install.packages("ggplot2")
#           install.packages("MASS")
#           install.packages("plyr")
#           install.packages("purrr")
#           install.packages("rlang")
#           install.packages("tibble")
#           install.packages("tidyr")
#           
#           install.packages('devtools')
#           devtools::install_github("Calvagone/campsismod", ref="develop", auth_token="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", force=TRUE)
#           
#           install.packages('bookdown')
#           install.packages('knitr')
#           install.packages('gridExtra')
#           install.packages('stringr')
#           install.packages('pkgdown')
#           install.packages('rmarkdown')
#           install.packages('roxygen2')
#           install.packages('testthat')
#           
#           install.packages('mrgsolve')
#           install.packages('RxODE')
#           install.packages(c("remotes"))
#           
#           remotes::install_deps(dependencies=FALSE)
#           remotes::install_cran("covr")
#         shell: Rscript {0}
# 
#       - name: Test coverage
#         run: covr::codecov(token="${{ secrets.CODECOV_TOKEN }}")
#         shell: Rscript {0}
